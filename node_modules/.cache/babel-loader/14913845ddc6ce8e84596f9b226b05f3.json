{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from \"react\";\n\nfunction useFetch(url) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchData = useCallback(async () => {\n    let controller = new AbortController();\n    return fetch(url, {\n      signal: controller.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch the data!\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setIsLoading(false);\n    });\n  }, [url]);\n\n  const deleteTodo = id => {\n    fetch(\"http://localhost:8000/todos/\" + id, {\n      method: \"DELETE\"\n    }).then(() => {\n      fetchData();\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetchData();\n    }, 1000);\n    return () => controller.abort;\n  }, [url, fetchData]);\n  return {\n    data,\n    deleteTodo,\n    isLoading\n  };\n}\n\n_s(useFetch, \"4DpXaSpjsNT/4EDNIQanlTVGdEc=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/alexisloricourt/Desktop/react-projects/router-react-project/src/useFetch.js"],"names":["useState","useEffect","useCallback","useFetch","url","data","setData","isLoading","setIsLoading","fetchData","controller","AbortController","fetch","signal","then","res","ok","Error","json","deleteTodo","id","method","setTimeout","abort"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMS,SAAS,GAAGP,WAAW,CAAC,YAAY;AACxC,QAAIQ,UAAU,GAAG,IAAIC,eAAJ,EAAjB;AAEA,WAAOC,KAAK,CAACR,GAAD,EAAM;AAAES,MAAAA,MAAM,EAAEH,UAAU,CAACG;AAArB,KAAN,CAAL,CACJC,IADI,CACEC,GAAD,IAAS;AACb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACX,cAAMC,KAAK,CAAC,2BAAD,CAAX;AACD;;AACD,aAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,KANI,EAOJJ,IAPI,CAOET,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVI,CAAP;AAWD,GAd4B,EAc1B,CAACJ,GAAD,CAd0B,CAA7B;;AAgBA,QAAMe,UAAU,GAAIC,EAAD,IAAQ;AACzBR,IAAAA,KAAK,CAAC,iCAAiCQ,EAAlC,EAAsC;AACzCC,MAAAA,MAAM,EAAE;AADiC,KAAtC,CAAL,CAEGP,IAFH,CAEQ,MAAM;AACZL,MAAAA,SAAS;AACV,KAJD;AAKD,GAND;;AAQAR,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,UAAU,CAAC,MAAM;AACfb,MAAAA,SAAS;AACV,KAFS,EAEP,IAFO,CAAV;AAIA,WAAO,MAAMC,UAAU,CAACa,KAAxB;AACD,GANQ,EAMN,CAACnB,GAAD,EAAMK,SAAN,CANM,CAAT;AAQA,SAAO;AAAEJ,IAAAA,IAAF;AAAQc,IAAAA,UAAR;AAAoBZ,IAAAA;AAApB,GAAP;AACD;;GArCQJ,Q;;AAuCT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\n\nfunction useFetch(url) {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchData = useCallback(async () => {\n    let controller = new AbortController();\n\n    return fetch(url, { signal: controller.signal })\n      .then((res) => {\n        if (!res.ok) {\n          throw Error(\"Could not fetch the data!\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        setData(data);\n        setIsLoading(false);\n      });\n  }, [url]);\n\n  const deleteTodo = (id) => {\n    fetch(\"http://localhost:8000/todos/\" + id, {\n      method: \"DELETE\",\n    }).then(() => {\n      fetchData();\n    });\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      fetchData();\n    }, 1000);\n\n    return () => controller.abort;\n  }, [url, fetchData]);\n\n  return { data, deleteTodo, isLoading };\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}