{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nfunction useFetch(url) {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const deleteTodo = id => {\n    fetch(\"http://localhost:8000/todos/\" + id, {\n      method: \"DELETE\"\n    }).then(() => {\n      const updatedData = data.filter(todo => todo.id !== id);\n      setData(updatedData);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"Fetching...\");\n\n    const fetchData = async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    deleteTodo\n  };\n}\n\n_s(useFetch, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/alexisloricourt/Desktop/react-projects/router-react-project/src/useFetch.js"],"names":["useState","useEffect","useFetch","url","data","setData","deleteTodo","id","fetch","method","then","updatedData","filter","todo","console","log","fetchData","response","json"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,UAAU,GAAIC,EAAD,IAAQ;AACzBC,IAAAA,KAAK,CAAC,iCAAiCD,EAAlC,EAAsC;AACzCE,MAAAA,MAAM,EAAE;AADiC,KAAtC,CAAL,CAEGC,IAFH,CAEQ,MAAM;AACZ,YAAMC,WAAW,GAAGP,IAAI,CAACQ,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAlC,CAApB;AACAF,MAAAA,OAAO,CAACM,WAAD,CAAP;AACD,KALD;AAMD,GAPD;;AASAV,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACL,GAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMa,QAAQ,CAACC,IAAT,EAAnB;AACAb,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJD;;AAKAY,IAAAA,SAAS;AACV,GARQ,EAQN,CAACb,GAAD,CARM,CAAT;AAUA,SAAO;AAAEC,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAP;AACD;;GAvBQJ,Q;;AAyBT,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useFetch(url) {\n  const [data, setData] = useState([]);\n\n  const deleteTodo = (id) => {\n    fetch(\"http://localhost:8000/todos/\" + id, {\n      method: \"DELETE\",\n    }).then(() => {\n      const updatedData = data.filter((todo) => todo.id !== id);\n      setData(updatedData);\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"Fetching...\");\n    const fetchData = async () => {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n    };\n    fetchData();\n  }, [url]);\n\n  return { data, deleteTodo };\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}